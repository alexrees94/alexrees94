<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<addon id="context.venom" name="Venom - Global Context Menu Items" provider-name="Venom" version="1.2.1">
	<requires>
		<import addon="script.module.requests" version="2.19.1" />
	</requires>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="contextSettings.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - CM Settings</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.venom.settings)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.venom/) +
					String.IsEqual(ListItem.Property(isVenom_widget),true)
				</visible>
			</item>
			<item library="traktManager.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - Trakt Manager</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.venom.traktManager)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.venom/) +
					String.IsEqual(ListItem.Property(isVenom_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="clearProviders.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - Clear Providers</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.venom.clearProviders)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.venom/?action=play) +
					String.IsEqual(ListItem.Property(isVenom_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]] |
					[String.Contains(Container.FolderPath,videodb://) +
					[String.Contains(Container.ListItem.Path,Window(home).Property(venom.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(venom.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="clearBookmark.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - Clear Item Bookmark</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.venom.clearBookmark)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.venom/?action=play) +
					String.IsEqual(ListItem.Property(isVenom_widget),true) +
					ListItem.IsResumable +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="rescrape.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - Rescrape Item</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.venom.rescrape)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.venom/?action=play) +
					String.IsEqual(ListItem.Property(isVenom_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="libRescrape.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - Rescrape Lib Item</label>
				<visible>
					String.Contains(Container.FolderPath,videodb://) +
					[String.Contains(Container.ListItem.Path,Window(home).Property(venom.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(venom.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="playFromHere.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - Play from here</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.venom.playFromHere)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.venom/) +
					String.IsEqual(ListItem.Property(isVenom_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
			<item library="autoPlay.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - Auto Play</label>
				<visible>
					String.IsEmpty(Window(home).Property(venom.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.venom.autoPlay)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.venom/?action=play) +
					String.IsEqual(ListItem.Property(isVenom_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="sourceSelect.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - Source Select</label>
				<visible>
					!String.IsEmpty(Window(home).Property(venom.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.venom.sourceSelect)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.venom/?action=play) +
					String.IsEqual(ListItem.Property(isVenom_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="findSimilar.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - Find Similar</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.venom.findSimilar)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.venom/) +
					String.IsEqual(ListItem.Property(isVenom_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="browseSeries.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - Browse Series</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.venom.browseSeries)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.venom/) +
					String.IsEqual(ListItem.Property(isVenom_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow)]
				</visible>
			</item>
			<item library="browseEpisodes.py">
				<label>[B][COLOR red]Venom[/COLOR][/B] - Browse Episodes</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.venom.browseEpisodes)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.venom/) +
					String.IsEqual(ListItem.Property(isVenom_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
		</menu>
	</extension>
	<extension point="xbmc.service" library="service.py" />
	<extension point="xbmc.addon.metadata">
		<summary lang="en">Venom - This Addon is currently in beta. Please be aware there may be bugs present</summary>
		<description lang="en">Adds Global Contextual Menu Items for Venom menu items throughout Kodi</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum></forum>
		<website>https://github.com/123Venom/context.venom</website>
		<source>https://github.com/123Venom/context.venom</source>
		<disclaimer lang="en"></disclaimer>
		<assets>
			<icon>icon.png</icon>
			<fanart>fanart.jpg</fanart>
			<screenshot></screenshot>
		</assets>
		<news>
[B][COLOR red]Update - v1.2.1 - Nov. 04, 2021[/COLOR][/B]
[COLOR yellow]--[/COLOR][I] The "Rescrape Item" context menu now has a pop-up select method of 4 possible choices to rescrape.  You can set a preferred default action in the settings to bypass the select dialog pop up.[/I]
		</news>
	</extension>
</addon>